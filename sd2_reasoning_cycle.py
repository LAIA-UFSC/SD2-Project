# -*- coding: utf-8 -*-
"""SD2 Reasoning Cycle.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R3WtVSc1X_6jOOrzWjcJF0V8nQkXcIAH
"""

class PlanLibrary:
    def __init__(self):
        self.plans = {}

    def set_plan_library(self, planlb):
        self.plans = planlb

    def add_plan(self, goal, prec, plan):
        self.plans.append((goal, {"context": prec, "plan": plan}))


    def get_plan(self, goal, bb):
        for g, plan_entry in self.plans:
            if g == goal and set(plan_entry['context'].items()).issubset(bb.items()):
                return plan_entry['plan']  # Return the first matching plan
        return None  # Return None if no plan matches

# AÇÔES DISPONÍVEIS #
# Each one corresponds to an action (it is just a simulation)

class Action:

    def look_at_middle_right(self):
        print("###> Looking to middle_right <### ")

    def look_at_up_right(self):
        print("###> Looking to up_right <### ")

    def look_at_down_right(self):
        print("###> Looking to down_right <### ")

class Agent:
    def __init__(self):

        self.beliefs = {}

        self.desires = []
        self.intention = []
        self.plan_library = PlanLibrary()

    # outras coisas interessantes, com beliefs update, add desires, etc..
    def get_desires(self):
        return self.desires.pop()
    def add_desires(self, desire):
        return self.desires.append(desire)
    def add_beliefs(self, beliefs):
        return self.beliefs.update(beliefs)
    def set_plan_library(self, pl):
        return self.plan_library.set_plan_library(pl)
    def get_plan_library(self):
        return self.plan_library


    def update_intention(self, goal):
        plan = self.plan_library.get_plan(goal,self.beliefs)
        if plan:
            self.intention.extend(plan)

    def execute_intention(self):
        while self.intention:
            next = self.intention.pop()
            print(next)
            if self.plan_library.get_plan(next,self.beliefs) == None:
                next_action = Action()
                action = getattr(next_action, next)
                action()
            else:
                self.intention.extend(self.plan_library.get_plan(next,self.beliefs))

agent = Agent()

# Streuct for the BB (Belief Base) : { KEY : VALUE, KEY2 ... }
agent.add_beliefs({'profile': "shy",
                   'position':'up_right'})

agent.add_desires("adjust_vision")


# Struct of tuple for Plan Library: ( GOAL, { CONTEXT : {set of beliefs}, PLAN: [sequence of actions] }, GOAL2 ... }
agent.set_plan_library([
    ('adjust_vision', {
                'context': {'position' : 'middle_right', 'profile' : 'confident'},
                'plan' : ['look_at_middle_right']
            }),
    ("adjust_vision", {
                'context': {'position' : 'down_right', 'profile' : 'confident'},
                'plan' : ['look_at_down_right']
            }),
    ("adjust_vision", {
                'context': {'position' : 'up_right', 'profile' : 'confident'},
                'plan' : ['look_at_up_right']
            }),
    ('adjust_vision', {
                'context': {'position' : 'middle_right', 'profile' : 'shy'},
                'plan' : ['look_at_down_right']
            }),
    ("adjust_vision", {
                'context': {'position' : 'down_right', 'profile' : 'shy'},
                'plan' : ['look_at_down_right']
            }),
    ("adjust_vision", {
                'context': {'position' : 'up_right', 'profile' : 'shy'},
                'plan' : ['look_at_middle_right']
            })
])

goal = agent.get_desires()
agent.update_intention(goal)
agent.execute_intention()